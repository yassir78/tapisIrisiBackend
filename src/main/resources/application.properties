# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection   
#spring.datasource.url=jdbc:mysql://localhost:3306/tapisirisi?useUnicode=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.url=jdbc:mysql://bcff252e5ad3b8:1283271d@eu-cdbr-west-03.cleardb.net/heroku_1b0cb56a0721836?reconnect=true
#spring.datasource.username=bcff252e5ad3b8
#spring.datasource.password=1283271d
spring.datasource.url=jdbc:mysql://localhost:3306/tapisirisi?useUnicode=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
#spring.datasource.url=jdbc:mysql://bcff252e5ad3b8:1283271d@eu-cdbr-west-03.cleardb.net/heroku_1b0cb56a0721836?reconnect=true
#spring.datasource.username=bcff252e5ad3b8
#spring.datasource.password=1283271d
#spring.datasource.url=jdbc:mysql://localhost:3306/tapisirisi?useUnicode=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jackson.serialization.fail-on-empty-beans=false
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
server.port=7700
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
# All files uploaded through the REST API will be stored in this directory
#file.upload-dir=/home/yassine/media/upload
#server.servlet.context-path=/api


